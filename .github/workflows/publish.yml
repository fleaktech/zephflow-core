name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ "**" ]
  release:
    types: [ created ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      checks: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Important for nebula-release

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run tests
        run: ./gradlew test

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: JUnit Tests
          path: '**/build/test-results/test/TEST-*.xml'
          reporter: java-junit

      - name: Generate JaCoCo Report
        run: ./gradlew jacocoTestReport

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false

      # Publish snapshots from main branch
      - name: Publish SNAPSHOT to GitHub Packages
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: ./gradlew clean devSnapshot publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Publish releases
      - name: Publish Release to GitHub Packages
        if: github.event_name == 'release'
        run: ./gradlew final publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}